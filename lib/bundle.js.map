{"version":3,"sources":["webpack:///webpack/bootstrap 316db16c346f4135ff80","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/car.js","webpack:///./lib/frogger.js","webpack:///./lib/frog.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACjCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;ACXD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 316db16c346f4135ff80","import Car from \"./car\";\nimport Frog from \"./frog\";\n\nclass Game {\n  constructor() {\n    this.cars = [];\n    this.frog = {};\n\n    this.addCars();\n    this.addFrog();\n  }\n\n  addCars() {\n    for (let i = 1; i <= 6; i++) {\n      let car = new Car({\n        pos: [(200 * i), 150],\n        radius: 30,\n        speed: -5\n      });\n      this.cars.push(car);\n    }\n\n    for (let i = 1; i <= 3; i++) {\n      let car = new Car({\n        pos: [(400 * i), 250],\n        radius: 30,\n        speed: -7\n      });\n      this.cars.push(car);\n    }\n\n    for (let i = 1; i <= 2; i++) {\n      let car = new Car({\n        pos: [(600 * i), 450],\n        radius: 30,\n        speed: 10\n      });\n      this.cars.push(car);\n    }\n\n    for (let i = 1; i <= 4; i++) {\n      let car = new Car({\n        pos: [(300 * i), 550],\n        radius: 30,\n        speed: 2\n      });\n      this.cars.push(car);\n    }\n  }\n\n  addFrog() {\n    this.frog = new Frog();\n    // return frog;\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    ctx.fillStyle = 'grey';\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y / 7 * 1);\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 100, Game.DIM_X, Game.DIM_Y / 7 * 2);\n    ctx.fillStyle = 'grey';\n    ctx.fillRect(0, 300, Game.DIM_X, Game.DIM_Y / 7 * 1);\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 400, Game.DIM_X, Game.DIM_Y / 7 * 2);\n    ctx.fillStyle = 'grey';\n    ctx.fillRect(0, 600, Game.DIM_X, Game.DIM_Y / 7 * 1);\n\n    ctx.strokeStyle = 'white';\n    ctx.beginPath();\n    ctx.setLineDash([30, 50]);\n    ctx.moveTo(0, 200);\n    ctx.lineTo(1200, 200);\n    ctx.stroke();\n\n    ctx.strokeStyle = 'white';\n    ctx.beginPath();\n    ctx.setLineDash([30, 50]);\n    ctx.moveTo(0, 500);\n    ctx.lineTo(1200, 500);\n    ctx.stroke();\n\n\n    this.cars.forEach(car => {\n      car.draw(ctx);\n    });\n\n    this.frog.draw(ctx);\n  }\n\n  moveObjects() {\n    this.cars.forEach(car => {\n      car.move();\n    });\n  }\n\n  checkCollisions() {\n    this.cars.forEach(car => {\n      if (this.frog.isCollidedWith(car)) {\n        alert(\"SPLAT!\");\n        this.frog.pos = [600, 650];\n      }\n    });\n  }\n\n  checkWin() {\n    if (this.frog.pos[1] === 50) {\n      alert(\"You Win\");\n      this.frog.pos = [600, 650];\n    }\n  }\n\n  step() {\n    this.moveObjects();\n    this.checkCollisions();\n    this.checkWin();\n  }\n}\n\nGame.DIM_X = 1200;\nGame.DIM_Y = 700;\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","class GameView {\n  constructor(game, ctx) {\n    this.game = game;\n    this.ctx = ctx;\n    this.frog = this.game.frog;\n  }\n\n  bindKeyHandlers() {\n    const frog = this.frog;\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      let move = GameView.MOVES[k];\n      key(k, () => {\n        let newX = frog.pos[0] + move[0];\n        let newY = frog.pos[1] + move[1];\n        if ((newX > 0 && newX < 1200) && (newY > 0 && newY < 700)) {\n          frog.pos = [newX, newY];\n        }\n      });\n    });\n  }\n\n\n  start() {\n    this.bindKeyHandlers();\n    window.setInterval(() => {\n      this.game.step();\n      this.game.draw(this.ctx);\n    }, 20);\n  }\n\n\n}\n\nGameView.MOVES = {\n  \"up\"    : [ 0, -50],\n  \"left\"  : [-50,  0],\n  \"down\"  : [ 0,  50],\n  \"right\" : [ 50,  0],\n};\n\nexport default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 1\n// module chunks = 0","class Car {\n  constructor(options) {\n    this.pos = options.pos;\n    this.speed = options.speed;\n    this.color = 'blue';\n    this.radius = options.radius;\n    // this.width = options.width;\n    // this.height = options.height;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true);\n    ctx.fill();\n\n    // ctx.fillRect(this.pos[0], this.pos[1], this.radius, this.radius);\n  }\n\n  move() {\n    this.pos = [this.pos[0] + this.speed, this.pos[1]];\n    let w = 1200;\n\n    if (this.pos[0] >= w) {\n      this.pos = [0, this.pos[1]];\n    }\n    if (this.pos[0] < 0) {\n      this.pos = [w, this.pos[1]];\n    }\n\n  }\n}\n\nexport default Car;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/car.js\n// module id = 2\n// module chunks = 0","import Game from \"./game\";\nimport GameView from \"./game_view\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementById(\"canvas\");\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/frogger.js\n// module id = 3\n// module chunks = 0","class Frog {\n  constructor() {\n    this.pos = [600, 650];\n    this.color = 'green';\n    this.radius = 30;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true);\n    ctx.fill();\n\n    // ctx.fillRect(this.pos[0], this.pos[1], this.radius, this.radius);\n  }\n\n  isCollidedWith(carObject) {\n    let radiiSum = this.radius + carObject.radius - 5;\n    let x_1 = this.pos[0];\n    let y_1 = this.pos[1];\n    let x_2 = carObject.pos[0];\n    let y_2 = carObject.pos[1];\n    let dist = Math.sqrt((x_1 - x_2) ** 2 + (y_1 - y_2) ** 2);\n    return dist < radiiSum;\n  }\n\n\n}\n\nexport default Frog;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/frog.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}